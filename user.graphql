type User {
    id: ID! @globalId
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
}

extend type Query {
    users: [User!]! @paginate(type: "paginator")
    user(id: ID @globalId(decode: ID) @eq): User! @find
    userByEmail(email: String @eq): User @find
    me: User @auth(guard: "api") @middleware(checks: ["auth:api"])
}

extend type Mutation {
    createUser (
        username: String @rules(apply: ["required|string"])
        content: String @rules(apply: ["required"])
    ): User @create
}
